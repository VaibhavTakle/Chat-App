{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","onChange","target","isTyping","placeholder","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","App","getItem","userSecret","projectID","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df10ce3b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) sendMessage(creds, chatId, { text });\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        placeholder=\"Send a message....\"\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n        <input\r\n          type=\"file\"\r\n          multiple={false}\r\n          id=\"upload-button\"\r\n          style={{ display: \"none\" }}\r\n          onChange={handleUpload.bind(this)}\r\n        />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","const MyMessage = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\"\r\n      }}>\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#CABCDC\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n      <div\r\n        key={`read_${index}`}\r\n        className=\"read-receipt\"\r\n        style={{ \r\n          float: isMyMessage ? 'right' : 'left',\r\n          backgroundImage : `url(${person?.person?.avatar})`\r\n        }}/>\r\n    )\r\n    );\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n      \r\n      return (\r\n        <div key = {`msg_${index}`} style={{width:'100%'}}>\r\n          <div className=\"message-block\">\r\n           {\r\n             isMyMessage ? <MyMessage message={message}/>\r\n             :<TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n           } \r\n          </div>\r\n           <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n             {renderReadReceipts(message, isMyMessage)}\r\n           </div>\r\n        </div>\r\n        );\r\n    });\r\n  };\r\n  if(!chat) return <div/>;\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className='chat-title-container'>\r\n        <div className=\"chat-title\" >{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height:'100px'}}/>\r\n      <div className='message-form-container'>\r\n       <MessageForm {...props} chatId={activeChat}/> \r\n      </div>\r\n    </div>\r\n  ); \r\n  \r\n};\r\n\r\nexport default ChatFeed;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": \"77913944-1ae1-4225-9a1c-a200286c7555\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (error) {\r\n      setError(\"Oops, incorrect credentials!!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { ChatEngine } from \"react-chat-engine\";\nimport React from \"react\";\nimport ChatFeed from \"./components/ChatFeed\";\nimport \"./App.css\";\nimport LoginForm from \"./components/LoginForm\";\n\nfunction App() {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      projectID=\"77913944-1ae1-4225-9a1c-a200286c7555\"\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}